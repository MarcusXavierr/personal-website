<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Meu website</title><link>https://marcusxavier.dev/</link><description>This is my cool site</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 01 Aug 2022 09:30:48 -0300</lastBuildDate><atom:link href="https://marcusxavier.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Guia fundamental da programação orientada a objetos - Final</title><link>https://marcusxavier.dev/posts/guia-poo-part3/</link><pubDate>Mon, 01 Aug 2022 09:30:48 -0300</pubDate><author>Marcus Xavier</author><guid>https://marcusxavier.dev/posts/guia-poo-part3/</guid><description>Agora que nós já vimos os pilares da POO e a sua importância, está na hora de abordar mais alguns aspectos importantes de orientação a objetos neste último artigo. Vamos falar um pouco sobre classes abstratas, interfaces e classes finais (conhecida como classe selada em algumas linguagens).
O que são classes abstratas? Elas são classes que não podem ser instanciadas. Ou seja, você não pode criar objetos a partir de uma classe abstrata.</description></item><item><title>Guia fundamental da programação orientada a objetos - Parte 2 | Os pilares</title><link>https://marcusxavier.dev/posts/guia-poo-part2/</link><pubDate>Mon, 01 Aug 2022 09:29:19 -0300</pubDate><author>Marcus Xavier</author><guid>https://marcusxavier.dev/posts/guia-poo-part2/</guid><description>É impossível falar de programação orientada a objetos sem citar seus famosos quatro pilares. Seguir esses pilares é muito importante para que você possa conseguir todos os maravilhosos benefícios da POO. No artigo de hoje eu vou falar exclusivamente sobre esses pilares, e sempre que pertinente vou exemplificar com código e imagens. Seria ótimo que você deixasse seu feedback nos comentários.
Quais são os pilares da POO? A POO possui alguns pilares que devem ser seguidos para que possamos começar a obter os benefícios oferecidos por esse paradigma da maneira mais correta possível.</description></item><item><title>Guia fundamental da programação orientada a objetos - Parte 1</title><link>https://marcusxavier.dev/posts/guia-poo-part1/</link><pubDate>Sun, 31 Jul 2022 19:09:07 -0300</pubDate><author>Marcus Xavier</author><guid>https://marcusxavier.dev/posts/guia-poo-part1/</guid><description>A ideia dessa série de posts é cobrir as partes que eu considero mais fundamentais na orientação a objetos, e no artigo de hoje iremos começar com os conceitos mais básicos desse paradigma.
Afinal, o que são classes e objetos? Explicando de forma resumida, objetos podem ser considerados estruturas que armazenam dados (propriedades), ações (métodos) e o estado atual desse objeto, então podem ter dois objetos do mesmo &amp;ldquo;tipo&amp;rdquo; com valores diferentes em suas propriedades, pois eles têm estados diferentes.</description></item><item><title>Hello world</title><link>https://marcusxavier.dev/posts/hello/</link><pubDate>Sun, 31 Jul 2022 18:56:00 -0300</pubDate><author>Marcus Xavier</author><guid>https://marcusxavier.dev/posts/hello/</guid><description>Bem vindo ao meu site pessoal Esse é o meu primeiro post no meu site. Em breve postarei mais coisas</description></item></channel></rss>
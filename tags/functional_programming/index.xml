<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Functional_programming - Tag - Meu website</title><link>https://marcusxavier.dev/tags/functional_programming/</link><description>Functional_programming - Tag - Meu website</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 05 Aug 2022 16:38:45 -0300</lastBuildDate><atom:link href="https://marcusxavier.dev/tags/functional_programming/" rel="self" type="application/rss+xml"/><item><title>Brincando Com A Função Reduce</title><link>https://marcusxavier.dev/posts/brincando-com-reduce/</link><pubDate>Fri, 05 Aug 2022 16:38:45 -0300</pubDate><author>Marcus Xavier</author><guid>https://marcusxavier.dev/posts/brincando-com-reduce/</guid><description>Introdução Faz um tempo que eu não escrevo nenhum blogpost. Nesse periodo eu andei estudando haskell e achei uma função que bem interessante chamada fold, mas essa função é mais conhecida como reduce. O que faz essa função ser bem interessante é o fato de que ela contém bastante informação em pouquissimas linhas de codigo.
Implementando um simples problema Só pra mostrar um pouco do que o reduce é capaz de fazer, vamos imaginar um problema hipotetico: Você recebe uma lista de compras que um cliente fez, e precisa somar todos os valores dessa lista.</description></item></channel></rss>